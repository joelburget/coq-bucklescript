// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pp$ReactTemplate = require("../src/pp.bs.js");
var Lib$ReactTemplate = require("../src/lib.bs.js");
var Names$ReactTemplate = require("../src/names.bs.js");
var Future$ReactTemplate = require("../src/future.bs.js");
var Lemmas$ReactTemplate = require("../src/lemmas.bs.js");
var Declare$ReactTemplate = require("../src/declare.bs.js");
var Impargs$ReactTemplate = require("../src/impargs.bs.js");
var CWarnings$ReactTemplate = require("../src/cWarnings.bs.js");
var Proof_global$ReactTemplate = require("../src/proof_global.bs.js");

var warn_definition_not_visible = CWarnings$ReactTemplate.create("definition-not-visible", "implicits", /* None */0, (function (ident) {
        return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.strbrk("Section definition "), Names$ReactTemplate.Id[/* print */8](ident)), Pp$ReactTemplate.strbrk(" is not visible from current goals"));
      }));

var warn_local_declaration = CWarnings$ReactTemplate.create("local-declaration", "scope", /* None */0, (function (param) {
        return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Names$ReactTemplate.Id[/* print */8](param[0]), Pp$ReactTemplate.strbrk(" is declared as a local ")), Pp$ReactTemplate.str(param[1]));
      }));

function get_locality(id, kind, param) {
  switch (param) {
    case 0 : 
        Curry._2(warn_local_declaration, /* None */0, /* tuple */[
              id,
              kind
            ]);
        return /* true */1;
    case 1 : 
        return /* true */1;
    case 2 : 
        return /* false */0;
    
  }
}

function declare_global_definition(ident, ce, local, k, pl, imps) {
  var local$1 = get_locality(ident, "definition", local);
  var kn = Declare$ReactTemplate.declare_constant(/* None */0, /* Some */[local$1], ident, /* None */0, /* tuple */[
        /* DefinitionEntry */Block.__(0, [ce]),
        /* IsDefinition */Block.__(1, [k])
      ]);
  var gr = /* ConstRef */Block.__(1, [kn]);
  Impargs$ReactTemplate.maybe_declare_manual_implicits(/* false */0, gr, /* None */0, imps);
  Declare$ReactTemplate.declare_univ_binders(gr, pl);
  Declare$ReactTemplate.definition_message(ident);
  return gr;
}

function declare_definition(ident, param, ce, pl, imps, hook) {
  var k = param[2];
  var local = param[0];
  var fix_exn = Future$ReactTemplate.fix_exn_of(ce[/* const_entry_body */0]);
  var r;
  var exit = 0;
  if (local !== 0) {
    exit = 1;
  } else if (Lib$ReactTemplate.sections_are_opened(/* () */0)) {
    var c = /* SectionLocalDef */Block.__(0, [ce]);
    Declare$ReactTemplate.declare_variable(ident, /* tuple */[
          Lib$ReactTemplate.cwd(/* () */0),
          c,
          /* IsDefinition */Block.__(1, [k])
        ]);
    Declare$ReactTemplate.definition_message(ident);
    var gr = /* VarRef */Block.__(0, [ident]);
    Impargs$ReactTemplate.maybe_declare_manual_implicits(/* false */0, gr, /* None */0, imps);
    Declare$ReactTemplate.declare_univ_binders(gr, pl);
    if (Proof_global$ReactTemplate.there_are_pending_proofs(/* () */0)) {
      Curry._2(warn_definition_not_visible, /* None */0, ident);
    }
    r = gr;
  } else {
    exit = 1;
  }
  if (exit === 1) {
    r = declare_global_definition(ident, ce, local, k, pl, imps);
  }
  return Lemmas$ReactTemplate.call_hook(fix_exn, hook, local, r);
}

function declare_fix($staropt$star, kind, pl, univs, f, param, t, imps) {
  var opaque = $staropt$star ? $staropt$star[0] : /* false */0;
  var ce = Declare$ReactTemplate.definition_entry(/* None */0, /* Some */[opaque], /* None */0, /* Some */[t], /* Some */[univs], /* Some */[param[1]], param[0][0]);
  return declare_definition(f, kind, ce, pl, imps, Lemmas$ReactTemplate.mk_hook((function (_, r) {
                    return r;
                  })));
}

exports.get_locality = get_locality;
exports.declare_definition = declare_definition;
exports.declare_fix = declare_fix;
/* warn_definition_not_visible Not a pure module */
