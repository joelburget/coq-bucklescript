// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Pp$ReactTemplate = require("./pp.bs.js");
var Names$ReactTemplate = require("./names.bs.js");

function pr_intro_pattern(prc, param) {
  var pat = param[/* v */0];
  switch (pat.tag | 0) {
    case 0 : 
        if (pat[0] !== 0) {
          return Pp$ReactTemplate.str("*");
        } else {
          return Pp$ReactTemplate.str("**");
        }
    case 1 : 
        return pr_intro_pattern_naming(pat[0]);
    case 2 : 
        var prc$1 = prc;
        var param$1 = pat[0];
        if (typeof param$1 === "number") {
          return Pp$ReactTemplate.str("_");
        } else {
          switch (param$1.tag | 0) {
            case 0 : 
                return pr_or_and_intro_pattern(prc$1, param$1[0]);
            case 1 : 
                return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("[="), Pp$ReactTemplate.hv(0, Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.spc, (function (param) {
                                          return pr_intro_pattern(prc$1, param);
                                        }), param$1[0]))), Pp$ReactTemplate.str("]"));
            case 2 : 
                return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(pr_intro_pattern(prc$1, param$1[1]), Pp$ReactTemplate.str("%")), Curry._1(prc$1, param$1[0][/* v */0]));
            case 3 : 
                if (param$1[0] !== 0) {
                  return Pp$ReactTemplate.str("->");
                } else {
                  return Pp$ReactTemplate.str("<-");
                }
            
          }
        }
    
  }
}

function pr_intro_pattern_naming(param) {
  if (typeof param === "number") {
    return Pp$ReactTemplate.str("?");
  } else if (param.tag) {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("?"), Names$ReactTemplate.Id[/* print */8](param[0]));
  } else {
    return Names$ReactTemplate.Id[/* print */8](param[0]);
  }
}

function pr_or_and_intro_pattern(prc, param) {
  if (param.tag) {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("("), Pp$ReactTemplate.hv(0, Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.pr_comma, (function (param) {
                              return pr_intro_pattern(prc, param);
                            }), param[0]))), Pp$ReactTemplate.str(")"));
  } else {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("["), Pp$ReactTemplate.hv(0, Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.pr_bar, (function (param) {
                              return Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.spc, (function (param) {
                                            return pr_intro_pattern(prc, param);
                                          }), param);
                            }), param[0]))), Pp$ReactTemplate.str("]"));
  }
}

function pr_move_location(pr_id, param) {
  if (typeof param === "number") {
    if (param) {
      return Pp$ReactTemplate.str(" at bottom");
    } else {
      return Pp$ReactTemplate.str(" at top");
    }
  } else if (param.tag) {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                        1,
                        1
                      ]), Pp$ReactTemplate.str("before ")), Curry._1(pr_id, param[0]));
  } else {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                        1,
                        1
                      ]), Pp$ReactTemplate.str("after ")), Curry._1(pr_id, param[0]));
  }
}

function pr_binding(prc, param) {
  var match = param[/* v */0];
  var match$1 = match[0];
  if (match$1.tag) {
    return Pp$ReactTemplate.hov(1, Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Names$ReactTemplate.Id[/* print */8](match$1[0]), Pp$ReactTemplate.str(" := ")), Pp$ReactTemplate.cut(/* () */0)), Curry._1(prc, match[1])));
  } else {
    return Pp$ReactTemplate.hov(1, Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$$int(match$1[0]), Pp$ReactTemplate.str(" := ")), Pp$ReactTemplate.cut(/* () */0)), Curry._1(prc, match[1])));
  }
}

function pr_bindings(prc, prlc, param) {
  if (typeof param === "number") {
    return Pp$ReactTemplate.mt(/* () */0);
  } else if (param.tag) {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                            1,
                            1
                          ]), Pp$ReactTemplate.str("with")), Pp$ReactTemplate.brk(/* tuple */[
                        1,
                        1
                      ])), Pp$ReactTemplate.pr_sequence((function (b) {
                      return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("("), pr_binding(prlc, b)), Pp$ReactTemplate.str(")"));
                    }), param[0]));
  } else {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                            1,
                            1
                          ]), Pp$ReactTemplate.str("with")), Pp$ReactTemplate.brk(/* tuple */[
                        1,
                        1
                      ])), Pp$ReactTemplate.pr_sequence(prc, param[0]));
  }
}

function pr_bindings_no_with(prc, prlc, param) {
  if (typeof param === "number") {
    return Pp$ReactTemplate.mt(/* () */0);
  } else if (param.tag) {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                    0,
                    1
                  ]), Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.spc, (function (b) {
                      return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("("), pr_binding(prlc, b)), Pp$ReactTemplate.str(")"));
                    }), param[0]));
  } else {
    return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.brk(/* tuple */[
                    0,
                    1
                  ]), Pp$ReactTemplate.prlist_with_sep(Pp$ReactTemplate.spc, prc, param[0]));
  }
}

function pr_with_bindings(prc, prlc, param) {
  return Pp$ReactTemplate.hov(1, Pp$ReactTemplate.$plus$plus(Curry._1(prc, param[0]), pr_bindings(prc, prlc, param[1])));
}

exports.pr_intro_pattern = pr_intro_pattern;
exports.pr_or_and_intro_pattern = pr_or_and_intro_pattern;
exports.pr_intro_pattern_naming = pr_intro_pattern_naming;
exports.pr_move_location = pr_move_location;
exports.pr_bindings = pr_bindings;
exports.pr_bindings_no_with = pr_bindings_no_with;
exports.pr_with_bindings = pr_with_bindings;
/* Pp-ReactTemplate Not a pure module */
