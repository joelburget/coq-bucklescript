// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pp$ReactTemplate = require("./pp.bs.js");
var Flags$ReactTemplate = require("./flags.bs.js");
var Mutex$ReactTemplate = require("./mutex.bs.js");
var CErrors$ReactTemplate = require("./cErrors.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var counters = [/* [] */0];

function new_counter(name, a, incr, build) {
  if (List.mem_assoc(name, counters[0])) {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "remoteCounter.ml",
            21,
            2
          ]
        ];
  }
  var data = [[a]];
  counters[0] = /* :: */[
    /* tuple */[
      name,
      data
    ],
    counters[0]
  ];
  var m = Mutex$ReactTemplate.create(/* () */0);
  var getter = [(function (param) {
        var f = function () {
          data[0][0] = Curry._1(incr, data[0][0]);
          return data[0][0];
        };
        if (Flags$ReactTemplate.async_proofs_is_worker(/* () */0)) {
          CErrors$ReactTemplate.anomaly(/* None */0, /* None */0, Pp$ReactTemplate.str("Slave processes must install remote counters."));
        }
        Mutex$ReactTemplate.lock(m);
        var x = Curry._1(f, /* () */0);
        Mutex$ReactTemplate.unlock(m);
        return Curry._1(build, x);
      })];
  var installer = function (f) {
    if (!Flags$ReactTemplate.async_proofs_is_worker(/* () */0)) {
      CErrors$ReactTemplate.anomaly(/* None */0, /* None */0, Pp$ReactTemplate.str("Only slave processes can install a remote counter."));
    }
    getter[0] = (function (param) {
        var f$1 = f;
        Mutex$ReactTemplate.lock(m);
        var x = Curry._1(f$1, /* () */0);
        Mutex$ReactTemplate.unlock(m);
        return x;
      });
    return /* () */0;
  };
  return /* tuple */[
          (function () {
              return Curry._1(getter[0], /* () */0);
            }),
          installer
        ];
}

function backup() {
  return counters[0];
}

function snapshot() {
  return List.map((function (param) {
                return /* tuple */[
                        param[0],
                        [[param[1][0][0]]]
                      ];
              }), counters[0]);
}

function restore(l) {
  return List.iter((function (param) {
                var name = param[0];
                if (!List.mem_assoc(name, counters[0])) {
                  throw [
                        Caml_builtin_exceptions.assert_failure,
                        [
                          "remoteCounter.ml",
                          49,
                          4
                        ]
                      ];
                }
                var dataref = List.assoc(name, counters[0]);
                dataref[0][0] = param[1][0][0];
                return /* () */0;
              }), l);
}

exports.new_counter = new_counter;
exports.backup = backup;
exports.snapshot = snapshot;
exports.restore = restore;
/* Pp-ReactTemplate Not a pure module */
