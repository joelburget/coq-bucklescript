// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Reduction$ReactTemplate = require("./reduction.bs.js");

var TypeError = Caml_exceptions.create("Type_errors-ReactTemplate.TypeError");

function nfj(env, param) {
  return /* record */[
          /* uj_val */param[/* uj_val */0],
          /* uj_type */Reduction$ReactTemplate.nf_betaiota(env, param[/* uj_type */1])
        ];
}

function error_unbound_rel(env, n) {
  throw [
        TypeError,
        env,
        /* UnboundRel */Block.__(0, [n])
      ];
}

function error_unbound_var(env, v) {
  throw [
        TypeError,
        env,
        /* UnboundVar */Block.__(1, [v])
      ];
}

function error_not_type(env, j) {
  throw [
        TypeError,
        env,
        /* NotAType */Block.__(2, [j])
      ];
}

function error_assumption(env, j) {
  throw [
        TypeError,
        env,
        /* BadAssumption */Block.__(3, [j])
      ];
}

function error_reference_variables(env, id, c) {
  throw [
        TypeError,
        env,
        /* ReferenceVariables */Block.__(4, [
            id,
            c
          ])
      ];
}

function error_elim_arity(env, ind, aritylst, c, pj, okinds) {
  throw [
        TypeError,
        env,
        /* ElimArity */Block.__(5, [
            ind,
            aritylst,
            c,
            pj,
            okinds
          ])
      ];
}

function error_case_not_inductive(env, j) {
  throw [
        TypeError,
        env,
        /* CaseNotInductive */Block.__(6, [j])
      ];
}

function error_number_branches(env, cj, expn) {
  throw [
        TypeError,
        env,
        /* NumberBranches */Block.__(8, [
            nfj(env, cj),
            expn
          ])
      ];
}

function error_ill_formed_branch(env, c, i, actty, expty) {
  throw [
        TypeError,
        env,
        /* IllFormedBranch */Block.__(9, [
            c,
            i,
            Reduction$ReactTemplate.nf_betaiota(env, actty),
            Reduction$ReactTemplate.nf_betaiota(env, expty)
          ])
      ];
}

function error_generalization(env, nvar, c) {
  throw [
        TypeError,
        env,
        /* Generalization */Block.__(10, [
            nvar,
            c
          ])
      ];
}

function error_actual_type(env, j, expty) {
  throw [
        TypeError,
        env,
        /* ActualType */Block.__(11, [
            j,
            expty
          ])
      ];
}

function error_cant_apply_not_functional(env, rator, randl) {
  throw [
        TypeError,
        env,
        /* CantApplyNonFunctional */Block.__(13, [
            rator,
            randl
          ])
      ];
}

function error_cant_apply_bad_type(env, t, rator, randl) {
  throw [
        TypeError,
        env,
        /* CantApplyBadType */Block.__(12, [
            t,
            rator,
            randl
          ])
      ];
}

function error_ill_formed_rec_body(env, why, lna, i, fixenv, vdefj) {
  throw [
        TypeError,
        env,
        /* IllFormedRecBody */Block.__(14, [
            why,
            lna,
            i,
            fixenv,
            vdefj
          ])
      ];
}

function error_ill_typed_rec_body(env, i, lna, vdefj, vargs) {
  throw [
        TypeError,
        env,
        /* IllTypedRecBody */Block.__(15, [
            i,
            lna,
            vdefj,
            vargs
          ])
      ];
}

function error_elim_explain(kp, ki) {
  switch (kp) {
    case 0 : 
        return /* WrongArity */2;
    case 1 : 
        if (ki !== 0) {
          return /* WrongArity */2;
        } else {
          return /* NonInformativeToInformative */0;
        }
    case 2 : 
        if (ki !== 1) {
          if (ki !== 0) {
            return /* WrongArity */2;
          } else {
            return /* NonInformativeToInformative */0;
          }
        } else {
          return /* StrongEliminationOnNonSmallType */1;
        }
    
  }
}

function error_unsatisfied_constraints(env, c) {
  throw [
        TypeError,
        env,
        /* UnsatisfiedConstraints */Block.__(16, [c])
      ];
}

exports.TypeError = TypeError;
exports.error_unbound_rel = error_unbound_rel;
exports.error_unbound_var = error_unbound_var;
exports.error_not_type = error_not_type;
exports.error_assumption = error_assumption;
exports.error_reference_variables = error_reference_variables;
exports.error_elim_arity = error_elim_arity;
exports.error_case_not_inductive = error_case_not_inductive;
exports.error_number_branches = error_number_branches;
exports.error_ill_formed_branch = error_ill_formed_branch;
exports.error_generalization = error_generalization;
exports.error_actual_type = error_actual_type;
exports.error_cant_apply_not_functional = error_cant_apply_not_functional;
exports.error_cant_apply_bad_type = error_cant_apply_bad_type;
exports.error_ill_formed_rec_body = error_ill_formed_rec_body;
exports.error_ill_typed_rec_body = error_ill_typed_rec_body;
exports.error_elim_explain = error_elim_explain;
exports.error_unsatisfied_constraints = error_unsatisfied_constraints;
/* Reduction-ReactTemplate Not a pure module */
