// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Pp$ReactTemplate = require("./pp.bs.js");
var Evd$ReactTemplate = require("./evd.bs.js");
var Loc$ReactTemplate = require("./loc.bs.js");
var Evar$ReactTemplate = require("./evar.bs.js");
var Util$ReactTemplate = require("./util.bs.js");
var Constr$ReactTemplate = require("./constr.bs.js");
var Global$ReactTemplate = require("./global.bs.js");
var Context$ReactTemplate = require("./context.bs.js");
var EConstr$ReactTemplate = require("./eConstr.bs.js");
var Environ$ReactTemplate = require("./environ.bs.js");
var Termops$ReactTemplate = require("./termops.bs.js");
var Evarutil$ReactTemplate = require("./evarutil.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Typeclasses$ReactTemplate = require("./typeclasses.bs.js");
var Pretype_errors$ReactTemplate = require("./pretype_errors.bs.js");

function pr_goal(e) {
  return Pp$ReactTemplate.$plus$plus(Pp$ReactTemplate.str("GOAL:"), Pp$ReactTemplate.$$int(Evar$ReactTemplate.repr(e)));
}

function uid(e) {
  return Pervasives.string_of_int(Evar$ReactTemplate.repr(e));
}

function env(evars, gl) {
  return Evd$ReactTemplate.evar_filtered_env(Evd$ReactTemplate.find(evars, gl));
}

function hyps(evars, gl) {
  return Evd$ReactTemplate.evar_filtered_hyps(Evd$ReactTemplate.find(evars, gl));
}

function nf_hyps(evars, gl) {
  var hyps = Environ$ReactTemplate.named_context_of_val(Evd$ReactTemplate.evar_filtered_hyps(Evd$ReactTemplate.find(evars, gl)));
  return Environ$ReactTemplate.val_of_named_context(Evarutil$ReactTemplate.nf_named_context_evar(evars, hyps));
}

function concl(evars, gl) {
  var evi = Evd$ReactTemplate.find(evars, gl);
  return EConstr$ReactTemplate.of_constr(evi[/* evar_concl */0]);
}

function extra(evars, gl) {
  return Evd$ReactTemplate.find(evars, gl)[/* evar_extra */6];
}

function mk_goal(evars, hyps, concl, extra) {
  var concl$1 = EConstr$ReactTemplate.Unsafe[/* to_constr */0](concl);
  var prev_future_goals = Evd$ReactTemplate.save_future_goals(evars);
  var evi_003 = /* evar_filter */Evd$ReactTemplate.Filter[/* identity */1];
  var evi_004 = /* evar_source */Loc$ReactTemplate.tag(/* None */0, /* GoalEvar */1);
  var evi = /* record */[
    /* evar_concl */concl$1,
    /* evar_hyps */hyps,
    /* evar_body : Evar_empty */0,
    evi_003,
    evi_004,
    /* evar_candidates : None */0,
    /* evar_extra */extra
  ];
  var evi$1 = Typeclasses$ReactTemplate.mark_unresolvable(evi);
  var match = Evarutil$ReactTemplate.new_pure_evar_full(evars, evi$1);
  var evk = match[1];
  var evars$1 = Evd$ReactTemplate.restore_future_goals(match[0], prev_future_goals);
  var ctxt = Environ$ReactTemplate.named_context_of_val(hyps);
  var partial_arg = Context$ReactTemplate.Named[/* Declaration */0][/* get_id */0];
  var inst = Util$ReactTemplate.$$Array[/* map_of_list */45]((function (param) {
          return Util$ReactTemplate.$percent$great(partial_arg, EConstr$ReactTemplate.mkVar, param);
        }), ctxt);
  var ev = EConstr$ReactTemplate.mkEvar(/* tuple */[
        evk,
        inst
      ]);
  return /* tuple */[
          evk,
          ev,
          evars$1
        ];
}

function partial_solution(sigma, evk, c) {
  if (Evarutil$ReactTemplate.occur_evar_upto(sigma, evk, c)) {
    Pretype_errors$ReactTemplate.error_occur_check(Environ$ReactTemplate.empty_env, sigma, evk, c);
  }
  return Evd$ReactTemplate.define(evk, EConstr$ReactTemplate.Unsafe[/* to_constr */0](c), sigma);
}

function partial_solution_to(sigma, evk, evk$prime, c) {
  var id = Evd$ReactTemplate.evar_ident(evk, sigma);
  var sigma$1 = partial_solution(sigma, evk, c);
  if (id) {
    return Evd$ReactTemplate.rename(evk$prime, id[0], sigma$1);
  } else {
    return sigma$1;
  }
}

function same_goal(evars1, gl1, evars2, gl2) {
  var evi1 = Evd$ReactTemplate.find(evars1, gl1);
  var evi2 = Evd$ReactTemplate.find(evars2, gl2);
  if (Constr$ReactTemplate.equal(evi1[/* evar_concl */0], evi2[/* evar_concl */0])) {
    return Environ$ReactTemplate.eq_named_context_val(evi1[/* evar_hyps */1], evi2[/* evar_hyps */1]);
  } else {
    return /* false */0;
  }
}

function progress(glss, gls) {
  var glss$1 = glss;
  var gls$1 = gls;
  var match = glss$1[/* it */0];
  if (match && !match[1]) {
    return 1 - same_goal(glss$1[/* sigma */1], match[0], gls$1[/* sigma */1], gls$1[/* it */0]);
  } else {
    return /* true */1;
  }
}

function new_goal_with(sigma, gl, extra_hyps) {
  var evi = Evd$ReactTemplate.find(sigma, gl);
  var hyps = evi[/* evar_hyps */1];
  var new_hyps = Curry._3(Util$ReactTemplate.List[/* fold_right */14], Environ$ReactTemplate.push_named_context_val, extra_hyps, hyps);
  var filter = evi[/* evar_filter */3];
  var new_filter = Evd$ReactTemplate.Filter[/* extend */4](Curry._1(Util$ReactTemplate.List[/* length */0], extra_hyps), filter);
  var new_evi_000 = /* evar_concl */evi[/* evar_concl */0];
  var new_evi_002 = /* evar_body */evi[/* evar_body */2];
  var new_evi_004 = /* evar_source */evi[/* evar_source */4];
  var new_evi_005 = /* evar_candidates */evi[/* evar_candidates */5];
  var new_evi_006 = /* evar_extra */evi[/* evar_extra */6];
  var new_evi = /* record */[
    new_evi_000,
    /* evar_hyps */new_hyps,
    new_evi_002,
    /* evar_filter */new_filter,
    new_evi_004,
    new_evi_005,
    new_evi_006
  ];
  var new_evi$1 = Typeclasses$ReactTemplate.mark_unresolvable(new_evi);
  var match = Evarutil$ReactTemplate.new_pure_evar_full(Evd$ReactTemplate.empty, new_evi$1);
  return /* record */[
          /* it */match[1],
          /* sigma */match[0]
        ];
}

function nf_evar(sigma, gl) {
  var evi = Evd$ReactTemplate.find(sigma, gl);
  var evi$1 = Evarutil$ReactTemplate.nf_evar_info(sigma, evi);
  var sigma$1 = Evd$ReactTemplate.add(sigma, gl, evi$1);
  return /* tuple */[
          gl,
          sigma$1
        ];
}

function abstract_type(sigma, gl) {
  var match = nf_evar(sigma, gl);
  var sigma$1 = match[1];
  var gl$1 = match[0];
  var env = Evd$ReactTemplate.evar_filtered_env(Evd$ReactTemplate.find(sigma$1, gl$1));
  var genv = Global$ReactTemplate.env(/* () */0);
  var is_proof_var = function (decl) {
    try {
      Environ$ReactTemplate.lookup_named(Curry._1(Context$ReactTemplate.Named[/* Declaration */0][/* get_id */0], decl), genv);
      return /* false */0;
    }
    catch (exn){
      if (exn === Caml_builtin_exceptions.not_found) {
        return /* true */1;
      } else {
        throw exn;
      }
    }
  };
  return Environ$ReactTemplate.fold_named_context_reverse((function (t, decl) {
                if (is_proof_var(decl)) {
                  var decl$1 = Termops$ReactTemplate.map_named_decl(EConstr$ReactTemplate.of_constr, decl);
                  return EConstr$ReactTemplate.mkNamedProd_or_LetIn(decl$1, t);
                } else {
                  return t;
                }
              }), concl(sigma$1, gl$1), env);
}

var V82 = [
  env,
  hyps,
  nf_hyps,
  concl,
  extra,
  mk_goal,
  partial_solution,
  partial_solution_to,
  progress,
  same_goal,
  new_goal_with,
  nf_evar,
  abstract_type
];

exports.uid = uid;
exports.pr_goal = pr_goal;
exports.V82 = V82;
/* Pp-ReactTemplate Not a pure module */
