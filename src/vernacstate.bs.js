// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var States$ReactTemplate = require("./states.bs.js");
var Proof_global$ReactTemplate = require("./proof_global.bs.js");

var s_cache = [/* None */0];

var s_proof = [/* None */0];

function invalidate_cache() {
  s_cache[0] = /* None */0;
  s_proof[0] = /* None */0;
  return /* () */0;
}

function update_cache(rf, v) {
  rf[0] = /* Some */[v];
  return v;
}

function do_if_not_cached(rf, f, v) {
  var match = rf[0];
  if (match) {
    if (match[0] !== v) {
      rf[0] = /* Some */[v];
      return Curry._1(f, v);
    } else {
      return /* () */0;
    }
  } else {
    rf[0] = /* Some */[v];
    return Curry._1(f, v);
  }
}

function freeze_interp_state(marshallable) {
  return /* record */[
          /* system */update_cache(s_cache, States$ReactTemplate.freeze(marshallable)),
          /* proof */update_cache(s_proof, Proof_global$ReactTemplate.freeze(marshallable)),
          /* shallow */+(marshallable === /* Shallow */841395124)
        ];
}

function unfreeze_interp_state(param) {
  do_if_not_cached(s_cache, States$ReactTemplate.unfreeze, param[/* system */0]);
  return do_if_not_cached(s_proof, Proof_global$ReactTemplate.unfreeze, param[/* proof */1]);
}

exports.freeze_interp_state = freeze_interp_state;
exports.unfreeze_interp_state = unfreeze_interp_state;
exports.invalidate_cache = invalidate_cache;
/* States-ReactTemplate Not a pure module */
