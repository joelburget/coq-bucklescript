// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Genarg$ReactTemplate = require("./genarg.bs.js");
var Geninterp$ReactTemplate = require("./geninterp.bs.js");

function make0(dyn, name) {
  var wit = Genarg$ReactTemplate.make0(name);
  Geninterp$ReactTemplate.register_val0(wit, dyn);
  return wit;
}

var wit_unit = make0(/* None */0, "unit");

var wit_bool = make0(/* None */0, "bool");

var wit_int = make0(/* None */0, "int");

var wit_string = make0(/* None */0, "string");

var wit_pre_ident = make0(/* None */0, "preident");

var wit_int_or_var = make0(/* Some */[Geninterp$ReactTemplate.val_tag(Genarg$ReactTemplate.topwit(wit_int))], "int_or_var");

var wit_intro_pattern = make0(/* None */0, "intropattern");

var wit_ident = make0(/* None */0, "ident");

var wit_var = make0(/* Some */[Geninterp$ReactTemplate.val_tag(Genarg$ReactTemplate.topwit(wit_ident))], "var");

var wit_ref = make0(/* None */0, "ref");

var wit_quant_hyp = make0(/* None */0, "quant_hyp");

var wit_sort_family = make0(/* None */0, "sort_family");

var wit_constr = make0(/* None */0, "constr");

var wit_uconstr = make0(/* None */0, "uconstr");

var wit_open_constr = make0(/* Some */[Geninterp$ReactTemplate.val_tag(Genarg$ReactTemplate.topwit(wit_constr))], "open_constr");

var wit_constr_with_bindings = make0(/* None */0, "constr_with_bindings");

var wit_open_constr_with_bindings = make0(/* None */0, "open_constr_with_bindings");

var wit_bindings = make0(/* None */0, "bindings");

var wit_red_expr = make0(/* None */0, "redexpr");

var wit_clause_dft_concl = make0(/* None */0, "clause_dft_concl");

var wit_integer = wit_int;

var wit_preident = wit_pre_ident;

var wit_reference = wit_ref;

var wit_global = wit_ref;

var wit_clause = wit_clause_dft_concl;

var wit_quantified_hypothesis = wit_quant_hyp;

var wit_intropattern = wit_intro_pattern;

var wit_redexpr = wit_red_expr;

exports.wit_unit = wit_unit;
exports.wit_bool = wit_bool;
exports.wit_int = wit_int;
exports.wit_string = wit_string;
exports.wit_pre_ident = wit_pre_ident;
exports.wit_int_or_var = wit_int_or_var;
exports.wit_intro_pattern = wit_intro_pattern;
exports.wit_ident = wit_ident;
exports.wit_var = wit_var;
exports.wit_ref = wit_ref;
exports.wit_quant_hyp = wit_quant_hyp;
exports.wit_sort_family = wit_sort_family;
exports.wit_constr = wit_constr;
exports.wit_uconstr = wit_uconstr;
exports.wit_open_constr = wit_open_constr;
exports.wit_constr_with_bindings = wit_constr_with_bindings;
exports.wit_open_constr_with_bindings = wit_open_constr_with_bindings;
exports.wit_bindings = wit_bindings;
exports.wit_red_expr = wit_red_expr;
exports.wit_clause_dft_concl = wit_clause_dft_concl;
exports.wit_integer = wit_integer;
exports.wit_preident = wit_preident;
exports.wit_reference = wit_reference;
exports.wit_global = wit_global;
exports.wit_clause = wit_clause;
exports.wit_quantified_hypothesis = wit_quantified_hypothesis;
exports.wit_intropattern = wit_intropattern;
exports.wit_redexpr = wit_redexpr;
/* wit_unit Not a pure module */
