// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pp$ReactTemplate = require("./pp.bs.js");
var Names$ReactTemplate = require("./names.bs.js");
var CErrors$ReactTemplate = require("./cErrors.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var $$default = /* Level */[0];

function is_default(param) {
  if (typeof param === "number" || param[0] !== 0) {
    return /* false */0;
  } else {
    return /* true */1;
  }
}

function is_transparent(param) {
  if (typeof param === "number" || param[0] !== 0) {
    return /* false */0;
  } else {
    return /* true */1;
  }
}

var empty_000 = /* var_opacity */Names$ReactTemplate.Id[/* Map */10][/* empty */0];

var empty_001 = /* cst_opacity */Names$ReactTemplate.Cmap[/* empty */0];

var empty_002 = /* var_trstate */Names$ReactTemplate.Id[/* Pred */11][/* full */1];

var empty_003 = /* cst_trstate */Names$ReactTemplate.Cpred[/* full */1];

var empty = /* record */[
  empty_000,
  empty_001,
  empty_002,
  empty_003
];

function get_strategy(param, f, param$1) {
  switch (param$1.tag | 0) {
    case 0 : 
        try {
          return Curry._2(Names$ReactTemplate.Cmap[/* find */21], Curry._1(f, param$1[0]), param[/* cst_opacity */1]);
        }
        catch (exn){
          if (exn === Caml_builtin_exceptions.not_found) {
            return $$default;
          } else {
            throw exn;
          }
        }
        break;
    case 1 : 
        try {
          return Curry._2(Names$ReactTemplate.Id[/* Map */10][/* find */21], param$1[0], param[/* var_opacity */0]);
        }
        catch (exn$1){
          if (exn$1 === Caml_builtin_exceptions.not_found) {
            return $$default;
          } else {
            throw exn$1;
          }
        }
        break;
    case 2 : 
        return /* Expand */0;
    
  }
}

function set_strategy(oracle, k, l) {
  var cst_opacity = oracle[/* cst_opacity */1];
  var var_opacity = oracle[/* var_opacity */0];
  switch (k.tag | 0) {
    case 0 : 
        var c = k[0];
        var cst_opacity$1 = is_default(l) ? Curry._2(Names$ReactTemplate.Cmap[/* remove */5], c, cst_opacity) : Curry._3(Names$ReactTemplate.Cmap[/* add */3], c, l, cst_opacity);
        var cst_trstate = typeof l === "number" && l !== 0 ? Curry._2(Names$ReactTemplate.Cpred[/* remove */7], c, oracle[/* cst_trstate */3]) : Curry._2(Names$ReactTemplate.Cpred[/* add */6], c, oracle[/* cst_trstate */3]);
        return /* record */[
                /* var_opacity */oracle[/* var_opacity */0],
                /* cst_opacity */cst_opacity$1,
                /* var_trstate */oracle[/* var_trstate */2],
                /* cst_trstate */cst_trstate
              ];
    case 1 : 
        var id = k[0];
        var var_opacity$1 = is_default(l) ? Curry._2(Names$ReactTemplate.Id[/* Map */10][/* remove */5], id, var_opacity) : Curry._3(Names$ReactTemplate.Id[/* Map */10][/* add */3], id, l, var_opacity);
        var var_trstate = typeof l === "number" && l !== 0 ? Curry._2(Names$ReactTemplate.Id[/* Pred */11][/* remove */7], id, oracle[/* var_trstate */2]) : Curry._2(Names$ReactTemplate.Id[/* Pred */11][/* add */6], id, oracle[/* var_trstate */2]);
        return /* record */[
                /* var_opacity */var_opacity$1,
                /* cst_opacity */oracle[/* cst_opacity */1],
                /* var_trstate */var_trstate,
                /* cst_trstate */oracle[/* cst_trstate */3]
              ];
    case 2 : 
        return CErrors$ReactTemplate.user_err(/* None */0, /* None */0, Pp$ReactTemplate.str("set_strategy: RelKey"));
    
  }
}

function fold_strategy(f, param, accu) {
  var fvar = function (id, lvl, accu) {
    return Curry._3(f, /* VarKey */Block.__(1, [id]), lvl, accu);
  };
  var fcst = function (cst, lvl, accu) {
    return Curry._3(f, /* ConstKey */Block.__(0, [cst]), lvl, accu);
  };
  var accu$1 = Curry._3(Names$ReactTemplate.Id[/* Map */10][/* fold */10], fvar, param[/* var_opacity */0], accu);
  return Curry._3(Names$ReactTemplate.Cmap[/* fold */10], fcst, param[/* cst_opacity */1], accu$1);
}

function get_transp_state(param) {
  return /* tuple */[
          param[/* var_trstate */2],
          param[/* cst_trstate */3]
        ];
}

function oracle_order(f, o, l2r, k1, k2) {
  var match = get_strategy(o, f, k1);
  var match$1 = get_strategy(o, f, k2);
  if (typeof match === "number") {
    if (match !== 0) {
      if (typeof match$1 === "number" && match$1 !== 0) {
        return l2r;
      } else {
        return /* false */0;
      }
    } else if (typeof match$1 === "number" && match$1 === 0) {
      return l2r;
    } else {
      return /* true */1;
    }
  } else {
    var n1 = match[0];
    if (typeof match$1 === "number") {
      if (match$1 !== 0) {
        return /* true */1;
      } else {
        return /* false */0;
      }
    } else {
      var n2 = match$1[0];
      if (n1 === n2) {
        return l2r;
      } else {
        return +(n1 < n2);
      }
    }
  }
}

function get_strategy$1(o) {
  return (function (param) {
      return get_strategy(o, (function (x) {
                    return x;
                  }), param);
    });
}

var transparent = $$default;

exports.empty = empty;
exports.oracle_order = oracle_order;
exports.transparent = transparent;
exports.is_transparent = is_transparent;
exports.get_strategy = get_strategy$1;
exports.set_strategy = set_strategy;
exports.fold_strategy = fold_strategy;
exports.get_transp_state = get_transp_state;
/* Pp-ReactTemplate Not a pure module */
